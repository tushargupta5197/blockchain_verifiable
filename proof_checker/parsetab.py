
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIMPLIESleftORleftANDrightNOTrightSAYSleftEQUIVALENTnonassocCAN_ACCESSCONTROLSleftSAYSleftSAYS_FORLINENUM PRINCIPLE AND OR IMPLIES NOT EQUIVALENT DERIVES SAYS SAYS_FOR CONTROLS CAN_ACCESS OBJECT LPAREN RPAREN REASON TO_PROVE GIVEN SEMICOLON TRUE FALSEstart : proofproof : to_prove linesproof : to_prove givens linesgivens : givens givengivens : givengiven : LINENUM statement GIVENto_prove : LINENUM statement TO_PROVElines : lines linelines : lineline : LINENUM statement REASON LINENUM LINENUM SEMICOLONline : LINENUM statement REASON LINENUM SEMICOLONline : LINENUM statement REASON SEMICOLONstatement : OBJECTstatement : statement AND statementstatement : statement OR statementstatement : statement IMPLIES statementstatement : statement EQUIVALENT statementstatement : NOT statementstatement : PRINCIPLE SAYS statementstatement : LPAREN statement RPARENstatement : PRINCIPLE SAYS_FOR PRINCIPLEstatement : PRINCIPLE CONTROLS statement'
    
_lr_action_items = {'AND':([11,13,20,21,30,31,32,35,36,37,38,39,40,41,42,],[-13,26,26,26,-18,26,26,-20,-21,-22,-19,-14,26,-17,26,]),'TO_PROVE':([11,13,30,35,36,37,38,39,40,41,42,],[-13,25,-18,-20,-21,-22,-19,-14,-16,-17,-15,]),'GIVEN':([11,20,30,31,35,36,37,38,39,40,41,42,],[-13,33,-18,33,-20,-21,-22,-19,-14,-16,-17,-15,]),'IMPLIES':([11,13,20,21,30,31,32,35,36,37,38,39,40,41,42,],[-13,27,27,27,-18,27,27,-20,-21,-22,-19,-14,-16,-17,-15,]),'SEMICOLON':([34,43,45,],[44,46,47,]),'EQUIVALENT':([11,13,20,21,30,31,32,35,36,37,38,39,40,41,42,],[-13,28,28,28,28,28,28,-20,-21,-22,28,28,28,-17,28,]),'OBJECT':([2,8,10,14,17,18,23,24,26,27,28,29,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'SAYS':([12,],[24,]),'CONTROLS':([12,],[23,]),'LINENUM':([0,1,5,6,7,9,15,16,19,25,33,34,43,44,46,47,],[2,8,17,-5,18,-9,-4,18,-8,-7,-6,43,45,-12,-11,-10,]),'REASON':([11,20,30,31,32,35,36,37,38,39,40,41,42,],[-13,34,-18,34,34,-20,-21,-22,-19,-14,-16,-17,-15,]),'PRINCIPLE':([2,8,10,14,17,18,22,23,24,26,27,28,29,],[12,12,12,12,12,12,36,12,12,12,12,12,12,]),'LPAREN':([2,8,10,14,17,18,23,24,26,27,28,29,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'NOT':([2,8,10,14,17,18,23,24,26,27,28,29,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'RPAREN':([11,21,30,35,36,37,38,39,40,41,42,],[-13,35,-18,-20,-21,-22,-19,-14,-16,-17,-15,]),'SAYS_FOR':([12,],[22,]),'OR':([11,13,20,21,30,31,32,35,36,37,38,39,40,41,42,],[-13,29,29,29,-18,29,29,-20,-21,-22,-19,-14,29,-17,-15,]),'$end':([3,4,7,9,16,19,44,46,47,],[0,-1,-2,-9,-3,-8,-12,-11,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'to_prove':([0,],[1,]),'givens':([1,],[5,]),'given':([1,5,],[6,15,]),'lines':([1,5,],[7,16,]),'start':([0,],[3,]),'statement':([2,8,10,14,17,18,23,24,26,27,28,29,],[13,20,21,30,31,32,37,38,39,40,41,42,]),'line':([1,5,7,16,],[9,9,19,19,]),'proof':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> proof','start',1,'p_start','parser.py',23),
  ('proof -> to_prove lines','proof',2,'p_proof_without_givens','parser.py',27),
  ('proof -> to_prove givens lines','proof',3,'p_proof_with_givens','parser.py',31),
  ('givens -> givens given','givens',2,'p_givens_multiple','parser.py',35),
  ('givens -> given','givens',1,'p_givens','parser.py',39),
  ('given -> LINENUM statement GIVEN','given',3,'p_given','parser.py',43),
  ('to_prove -> LINENUM statement TO_PROVE','to_prove',3,'p_to_prove','parser.py',47),
  ('lines -> lines line','lines',2,'p_lines_multiple','parser.py',51),
  ('lines -> line','lines',1,'p_lines','parser.py',55),
  ('line -> LINENUM statement REASON LINENUM LINENUM SEMICOLON','line',6,'p_line_2refs','parser.py',59),
  ('line -> LINENUM statement REASON LINENUM SEMICOLON','line',5,'p_line_1ref','parser.py',63),
  ('line -> LINENUM statement REASON SEMICOLON','line',4,'p_line_noref','parser.py',67),
  ('statement -> OBJECT','statement',1,'p_statement','parser.py',71),
  ('statement -> statement AND statement','statement',3,'p_statement_and','parser.py',75),
  ('statement -> statement OR statement','statement',3,'p_statement_or','parser.py',79),
  ('statement -> statement IMPLIES statement','statement',3,'p_statement_implies','parser.py',83),
  ('statement -> statement EQUIVALENT statement','statement',3,'p_statement_equivalent','parser.py',87),
  ('statement -> NOT statement','statement',2,'p_statement_not','parser.py',91),
  ('statement -> PRINCIPLE SAYS statement','statement',3,'p_statement_says','parser.py',95),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_statement_parens','parser.py',99),
  ('statement -> PRINCIPLE SAYS_FOR PRINCIPLE','statement',3,'p_statement_says_for','parser.py',103),
  ('statement -> PRINCIPLE CONTROLS statement','statement',3,'p_statement_controls','parser.py',107),
]
